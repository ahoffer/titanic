import pandas as pd
from scipy import sparse
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import RFE
from sklearn.model_selection import train_test_split

# Load files generated by load_data script
target = pd.read_csv('target.csv')
passenger_id = pd.read_csv('passenger_id.csv')
training = sparse.load_npz('training.npz')
testing = sparse.load_npz('testing.npz')

# Find best features
etc = GradientBoostingClassifier(n_estimators=20, random_state=42)
rfe = RFE(etc, n_features_to_select=4)
rfe.fit(training, target)
training_best_features = training[:, rfe.support_]
testing_best_features = testing[:, rfe.support_]

# Create model and predictions
model = RandomForestClassifier(n_estimators=25, random_state=42, n_jobs=4)
model.fit(training_best_features, target)
predication = model.predict(testing_best_features)

# Save predictions in to uploadable file
predication = pd.DataFrame(predication, index=passenger_id)
predication.to_csv('predictions.csv', index_label='PassengerId', header=['Survived'])
